// RobotBuilder Version: 3.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.subsystems;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Solenoid;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Pneumatics extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private Solenoid solenoid0;
private Solenoid solenoid1;
private Solenoid solenoid2;
private Solenoid solenoid3;
private Solenoid hornSolenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    /**
    *
    */
    public Pneumatics() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

       

solenoid0 = new Solenoid(0, 0);
 addChild("Solenoid0",solenoid0);
 

solenoid1 = new Solenoid(0, 1);
 addChild("Solenoid1",solenoid1);
 

solenoid2 = new Solenoid(0, 2);
 addChild("Solenoid2",solenoid2);
 

solenoid3 = new Solenoid(0, 3);
 addChild("Solenoid3",solenoid3);

 hornSolenoid = new Solenoid(0,4);
 addChild("hornSolenoid", hornSolenoid);
 


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    public void shoot1Command() {

        solenoid0.set(true);
    }

    public void close1Command() {

        solenoid0.set(false);
    }

    public void shoot2Command() {

        solenoid1.set(true);
    }

    public void close2Command() {

        solenoid1.set(false);
    }

    public void shoot3Command() {

        solenoid2.set(true);
    }

    public void close3Command() {

        solenoid2.set(false);
    }

    public void shoot4Command() {

        solenoid3.set(true);
    }

    public void close4Command() {

        solenoid3.set(false);
    }

    public void hornCommand() {

        hornSolenoid.set(true);
    }

    public void quietCommand() {

        hornSolenoid.set(false);
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

